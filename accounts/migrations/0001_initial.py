# Generated by Django 3.1.1 on 2020-10-01 07:02

import accounts.models
import accounts.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='last name')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1)),
                ('birthdate', models.DateField(blank=True, null=True, validators=[accounts.validators.validate_age])),
                ('profile_pic', models.ImageField(blank=True, help_text='Maximum file size allowed is 150KB', null=True, upload_to=accounts.models.upload_image_path, validators=[accounts.validators.validate_image])),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'Director'), (2, 'HOD'), (3, 'Faculty'), (4, 'Admin Staff')], default=3)),
                ('department', models.CharField(choices=[('MCA', 'MCA'), ('MBA', 'MBA'), ('BCA', 'BCA'), ('BBA', 'BBA'), ('BJMC', 'BJMC')], max_length=10, null=True, verbose_name='Department')),
                ('date_joined', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('staff', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='last name')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1)),
                ('birthdate', models.DateField(blank=True, null=True, validators=[accounts.validators.validate_age])),
                ('profile_pic', models.ImageField(blank=True, help_text='Maximum file size allowed is 150KB', null=True, upload_to=accounts.models.upload_image_path, validators=[accounts.validators.validate_image])),
                ('enroll_num', models.BigIntegerField(default=18535693076, unique=True, validators=[django.core.validators.MaxValueValidator(999999999999)])),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('student', django.db.models.manager.Manager()),
            ],
        ),
    ]
